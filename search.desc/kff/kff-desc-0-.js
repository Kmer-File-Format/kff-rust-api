searchState.loadedDescShard("kff", 0, "Kmer File Format Rust parser and writer\nError struct of project kff\nAn iterator over all kmer present in a Kff file\nKmer File Format Rust parser\nStruct and function to manage section\nUtils function for KFF\nEncoding isn’t valid each pair of bits must be different\nContains the error value\nEnum to manage error\nValue with name ‘name’ isn’t present in Values this …\nFooter size isn’t correct or file not respect footer …\nStandard from Utf8 error\nMajor version number is upper than support\nMinor version number is upper than support\nStandard io error\nKff specific error\nKff error\nValue max seems to be too large\nMissing magic number at begin or end\nNo ‘first_index’ in footer\nNo global index\nNo Value section before target section\nNot a kmer section\nNot a valid Kff section prefix\nNot an index\nContains the success value\nAlias of result\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA Kmer Iterator that consume Kff file\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBuild a KmerIterator with a Kff object\nStruct to read a kff file\nCheck readable match with a KFF file\nIntialize a Kff object to write file\nFinalize write the final signature\nReturns the argument unchanged.\nHeader extract from <code>inner</code>\nHeader extract from <code>inner</code>\nGlobalIndex present only if inner is seekable and first …\nInner read source\nCalls <code>U::from(self)</code>.\nGet kmer of nth section in index.\nConsume Kff object to create a KmerIterator\nRead Kff until last kmer section\nCreate a new Kff by read file match with path\nCreate a new Kff reader by accept mutable reference on …\nHeader extract from <code>inner</code>\nCurrent Values extract from <code>inner</code>\nCurrent Values extract from <code>inner</code>\nCurrent Values extract from <code>inner</code>\nCreate a Kff and generate a global index\nCreate a Kff object to write in inner\nWrite a Index section\nWrite a Minimizer section\nWrite a Raw section\nWrite a Values section\nRepresentation of a KFF kmer block\nParse, manage and write Header information\nRepresentation of a KFF index\nRead and Write Minimizer section\nRead and Write Raw section\nParse, manage and write Values section\nStruct to data present in KFF Raw or Minimizer block\nSize of data associate (in bytes) to each kmer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSize of kmer\nBit field store all kmer of this block\nMinimizer offset\nCreate a new block\nGet the next kmer of the block\nRead minimizer block\nRead raw block\nWrite minimizer block\nWrite raw block\nStruct to parse, manage and write Header information\nThis file contains only canonical kmer\nThis file contains only canonical kmer\nEncoding schema\nComment link to this file\nComment link to this file\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMajor version number\nMinor version number\nConstructor of header\nRead a readable to create a new header\nThis file contains only canonical kmer\nSet encoding\nComment link to this file\nSet major version\nSet minor version\nThis file contains only uniq kmer\nThis file contains only uniq kmer\nThis file contains only uniq kmer\nWrite this Header in KFF format\nStruct to Read and Write Index section\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate an index\nPosition of the next index\nPosition of the next index\nVector of block type and relative position\nVector of block type and relative position\nRead an Index section, section flag must be already read\nPosition of the next index\nVector of block type and relative position\nSkip index section\nWrite an Index section, section flag isn’t write\nStruct to Read and Write Raw section\nSize in bytes of data associate to each kmer\nSize in bytes of data associate to each kmer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSize of kmer\nSize of kmer\nSize of minimizer\nSize of minimizer\nMax number of kmer per block\nMax number of kmer per block\nIntialize a minimizer section with Values\nKmer are sort by lexicographic order\nKmer are sort by lexicographic order\nRead a Minimizer section, section flag must be already read\nSize in bytes of data associate to each kmer\nSize of kmer\nSize of minimizer\nMax number of kmer per block\nKmer are sort by lexicographic order\nWrite a Raw section, section flag isn’t read\nStruct to Read and Write Raw section\nSize in bytes of data associate to each kmer\nSize in bytes of data associate to each kmer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSize of kmer\nSize of kmer\nMax number of kmer per block\nMax number of kmer per block\nIntialize a raw section with Values\nKmer are sort by lexicographic order\nKmer are sort by lexicographic order\nRead a Raw section, section flag must be already read\nSize in bytes of data associate to each kmer\nSize of kmer\nMax number of kmer per block\nKmer are sort by lexicographic order\nWrite a Raw section, section flag isn’t write\nA trait to implement some function around Values alias\nStruct to parse, manage and write Values section\nBuild an empty Values\nBuild a Values from a readable key are overwrite, section …\nBuild an empty Values but with a minimal capacity\nWrite contents of Values in writables, section flag isn’…\nWrite contents of Values in a writables as a footer\nBuild a global index of a kff file\nRepresentation of a KFF kmer block\nUtils function to read KFF\nUtils function to write KFF\nStruct that manage and build a global index of a Kff file\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a GlobalIndex by scan all index in file\nPair of section type and position from begin of file\nRepresent data associate to a kmer\nRepresent a Kmer with data\nRepresent a sequence in 2 bit\nData associate to kmer\nData associate to kmer\nReturns the argument unchanged.\nCreate a Kmer for ascii sequence\nCalls <code>U::from(self)</code>.\nCreate a new kmer\nGet seq in ascii\n2 bit field for sequenc\n2 bit field for sequenc\nData associate to kmer\n2 bit field for sequenc\nDefine trait containts utils function to parsing kff\nFunction some base in 2bits representation\nFunction read a Kff ‘ascii’\nFunction that read one bit and convert it as bool\nFunction that read i64\nFunction read N bytes (N define at compile time) in a …\nFunction read N bytes (N define at run time) in a readable\nFunction that read u16\nFunction that read u32\nFunction that read u64\nFunction that read u8\nDefine trait containts utils function to write kff\nFunction that write bytes plus a ‘\\0’ at end\nFunction that write one bit and convert it as bool\nFunction that write all bytes\nFunction that write i64\nFunction that write u16\nFunction that write u32\nFunction that write u64\nFunction that write u8")